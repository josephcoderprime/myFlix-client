var helpers = require("../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
//components states
parcelHelpers.export(exports, "MainView", ()=>MainView
);
//movies state that will hold the list of movies:
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactRouterDom = require("react-router-dom");
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _reactRedux = require("react-redux");
// #0
var _actions = require("../../actions/actions");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _container = require("react-bootstrap/Container");
var _containerDefault = parcelHelpers.interopDefault(_container);
var _row = require("react-bootstrap/Row");
var _rowDefault = parcelHelpers.interopDefault(_row);
var _nav = require("react-bootstrap/Nav");
var _navDefault = parcelHelpers.interopDefault(_nav);
var _navbar = require("react-bootstrap/Navbar");
var _navbarDefault = parcelHelpers.interopDefault(_navbar);
var _navDropdown = require("react-bootstrap/NavDropdown");
var _navDropdownDefault = parcelHelpers.interopDefault(_navDropdown);
var _form = require("react-bootstrap/Form");
var _formDefault = parcelHelpers.interopDefault(_form);
var _formControl = require("react-bootstrap/FormControl");
var _formControlDefault = parcelHelpers.interopDefault(_formControl);
var _button = require("react-bootstrap/Button");
var _buttonDefault = parcelHelpers.interopDefault(_button);
var _mainViewScss = require("../main-view/main-view.scss");
var _moviesList = require("../movies-list/movies-list");
var _moviesListDefault = parcelHelpers.interopDefault(_moviesList);
//reusable movie-card components
var _loginView = require("../login-view/login-view");
var _movieCard = require("../movie-card/movie-card");
var _movieView = require("../movie-view/movie-view");
var _registrationView = require("../registration-view/registration-view");
var _directorView = require("../director-view/director-view");
var _genreView = require("../genre-view/genre-view");
var _profileView = require("../profile-view/profile-view");
var _profileViewDefault = parcelHelpers.interopDefault(_profileView);
class MainView extends _reactDefault.default.Component {
    //create component with constructor- the place to initialize a stateâ€™s values.
    constructor(props){
        super(props);
        // initialized with an object containing movies that holds an array of movies
        const localUser = JSON.parse(localStorage.getItem('user'));
        this.state = {
            movies: [],
            selectedMovie: null,
            user: localUser,
            register: null
        };
    }
    componentDidMount() {
        let accessToken = localStorage.getItem('token');
        if (accessToken !== null) // this.setState({
        //   user: JSON.parse(localStorage.getItem('user'))
        // });
        this.getMovies(accessToken);
    }
    /* When a user successfully logs in, this function updates the `user` property in state to that *particular user*/ onLoggedIn(authData) {
        console.log('Auth Data User', authData.user);
        this.setState({
            user: authData.user
        });
        localStorage.setItem('token', authData.token);
        localStorage.setItem('user', JSON.stringify(authData.user));
        localStorage.setItem('favoriteMovies', authData.user.FavoriteMovies);
        window.location.pathname = '/';
        this.getMovies(authData.token);
    }
    logOut() {
        localStorage.removeItem('token');
        localStorage.removeItem('user');
        this.setState({
            user: null
        });
        alert('You have logged out');
        window.open('/login', '_self');
    }
    //make a GET request to heroku.
    getMovies(token) {
        _axiosDefault.default.get('https://kumi-movie-index.herokuapp.com/movies', {
            headers: {
                Authorization: `Bearer ${token}`
            }
        }).then((response)=>{
            // #1
            this.props.setMovies(response.data);
        }).catch(function(error) {
            console.log(error);
        });
    }
    /*When a movie is clicked, this function is invoked and updates the state of the `selectedMovie` *property to that movie*/ onMovieClick(movie) {
        this.setState({
            selectedMovie: movie
        });
    }
    onRegister(register) {
        this.setState({
            register
        });
    }
    render() {
        // #2
        let { movies  } = this.props;
        let { user  } = this.state;
        //destructure
        const { selectedMovie , register  } = this.state;
        /* If there is no user, the LoginView is rendered. If there is a user logged in, the user details are *passed as a prop to the LoginView*/ if (window.location.pathname === '/') {
            if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                onLoggedIn: (user1)=>this.onLoggedIn(user1)
                ,
                __source: {
                    fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                    lineNumber: 129
                },
                __self: this
            }));
        }
        // Before the movies have been loaded
        if (!movies) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "main-view",
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 134
            },
            __self: this
        }));
        if (window.location.pathname === '/register') return(/*#__PURE__*/ _reactDefault.default.createElement(_registrationView.RegistrationView, {
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 136
            },
            __self: this
        }));
        return(/*#__PURE__*/ _reactDefault.default.createElement(_containerDefault.default, {
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 139
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.BrowserRouter, {
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 140
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_navbarDefault.default, {
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 141
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_navbarDefault.default.Brand, {
            href: "/",
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 142
            },
            __self: this
        }, "Home"), /*#__PURE__*/ _reactDefault.default.createElement(_navbarDefault.default.Toggle, {
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 143
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_navbarDefault.default.Collapse, {
            className: "justify-content-end",
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 144
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_navDefault.default, {
            className: "justify-content-end",
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 145
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_navDefault.default.Link, {
            href: `/users/${user.Username}`,
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 146
            },
            __self: this
        }, "My Account")), /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
            onClick: ()=>this.logOut()
            ,
            variant: "secondary",
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 148
            },
            __self: this
        }, "Log Out"))), /*#__PURE__*/ _reactDefault.default.createElement(_rowDefault.default, {
            className: "main-view",
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 154
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            exact: true,
            path: "/register",
            render: ()=>/*#__PURE__*/ _reactDefault.default.createElement(_registrationView.RegistrationView, null)
            ,
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 155
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            exact: true,
            path: "/",
            render: ()=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_moviesListDefault.default, {
                    movies: movies
                }));
            },
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 157
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/movies/:movieId",
            render: ({ match  })=>/*#__PURE__*/ _reactDefault.default.createElement(_movieView.MovieView, {
                    movie: movies.find((m)=>m._id === match.params.movieId
                    )
                })
            ,
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 162
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/genres/:name",
            render: ({ match  })=>{
                if (!movies) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_genreView.GenreView, {
                    genre: movies.find((m)=>m.Genre.Name === match.params.name
                    ),
                    movies: movies
                }));
            },
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 164
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/directors/:name",
            render: ({ match  })=>{
                if (!movies) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_directorView.DirectorView, {
                    director: movies.find((m)=>m.Director.Name === match.params.name
                    ),
                    movies: movies
                }));
            },
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 169
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            exact: true,
            path: "/users/:username",
            render: ()=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (data)=>this.onLoggedIn(data)
                }));
                if (movies.length === 0) return;
                return(/*#__PURE__*/ _reactDefault.default.createElement(_profileViewDefault.default, {
                    movies: movies
                }));
            },
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 174
            },
            __self: this
        })))));
    }
}
// #3
let mapStateToProps = (state)=>{
    return {
        movies: state.movies
    };
};
exports.default = _reactRedux.connect(mapStateToProps, {
    setMovies: _actions.setMovies
})(MainView);

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}