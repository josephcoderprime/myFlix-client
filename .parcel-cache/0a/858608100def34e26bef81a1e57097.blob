var helpers = require("../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MainView", ()=>MainView
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _reactRedux = require("react-redux");
var _reactRouterDom = require("react-router-dom");
var _actions = require("../../actions/actions");
var _row = require("react-bootstrap/Row");
var _rowDefault = parcelHelpers.interopDefault(_row);
var _col = require("react-bootstrap/Col");
var _colDefault = parcelHelpers.interopDefault(_col);
var _button = require("react-bootstrap/Button");
var _buttonDefault = parcelHelpers.interopDefault(_button);
var _loginView = require("../login-view/login-view");
var _registrationView = require("../registration-view/registration-view");
var _movieView = require("../movie-view/movie-view");
var _directorView = require("../director-view/director-view");
var _genreView = require("../genre-view/genre-view");
var _profileView = require("../profile-view/profile-view");
var _profileUpdate = require("../profile-update/profile-update");
var _moviesList = require("../movies-list/movies-list");
var _moviesListDefault = parcelHelpers.interopDefault(_moviesList);
var _config = require("../../config");
var _configDefault = parcelHelpers.interopDefault(_config);
var _mainViewScss = require("./main-view.scss");
class MainView extends _reactDefault.default.Component {
    constructor(){
        super();
        //Initial state is set to null
        this.state = {
            movies: [],
            user: null,
            token: null
        };
    }
    // One of the hooks available in a React Component
    componentDidMount() {
        let accessToken = localStorage.getItem('token');
        if (accessToken !== null) {
            this.setState({
                user: localStorage.getItem('user')
            });
            this.getMovies(accessToken);
        }
    }
    getMovies(token) {
        _axiosDefault.default.get(`${_configDefault.default.API_URL}/movies`, {
            headers: {
                Authorization: `Bearer ${token}`
            }
        }).then((response)=>{
            this.props.setMovies(response.data);
        }).catch(function(error) {
            console.log(error);
        });
    }
    /* When a user successfully logs in, this function updates the `user` for
    entry in state to the *particular user*/ onLoggedIn(authData) {
        console.log(authData);
        this.setState({
            user: authData.user.Username
        });
        localStorage.setItem('token', authData.token);
        localStorage.setItem('user', authData.user.Username);
        localStorage.setItem('email', authData.user.Email);
        localStorage.setItem('birthday', authData.user.Birthday);
        localStorage.setItem('favoriteMovies', authData.user.FavoriteMovies);
        this.getMovies(authData.token);
    }
    logOut() {
        localStorage.clear();
        this.setState({
            user: null
        });
        console.log("logout successful");
        alert("You have logout successfully");
    }
    render() {
        //const { movies, register, selectedMovie, user } = this.state;  
        let { movies  } = this.props;
        let { user  } = this.state;
        /* If there is no user, the LoginView is rendered. If there is a user logged in, the user
        details are *passed as a prop to the LoginView*/ //before the movie have been loaded
        //if (!us
        return(/*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.BrowserRouter, {
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 101
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "main-view",
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 102
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "navbar",
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 103
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
            to: `/profile`,
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 104
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
            className: "nav-button",
            variant: "link",
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 105
            },
            __self: this
        }, "PROFILE")), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
            to: `/`,
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 107
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
            className: "nav-button",
            variant: "link",
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 108
            },
            __self: this
        }, "HOME")), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
            to: `/`,
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 110
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
            className: "nav-button",
            variant: "link",
            onClick: this.onLoggedOut.bind(this),
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 111
            },
            __self: this
        }, "LOGOUT"))), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            exact: true,
            path: "/",
            render: ()=>{
                console.log('user= ', user);
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_moviesListDefault.default, {
                    movies: movies
                }));
            },
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 115
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/register",
            render: ()=>/*#__PURE__*/ _reactDefault.default.createElement(_registrationView.RegistrationView, null)
            ,
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 120
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/profile",
            render: ()=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_profileView.ProfileView, {
                    getFavouriteMoviesDetails: this.getFavouriteMoviesDetails
                }));
            },
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 122
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            exact: true,
            path: "/movies/:movieId",
            render: ({ match  })=>/*#__PURE__*/ _reactDefault.default.createElement(_movieView.MovieView, {
                    movie: movies.find((m)=>m.id === match.params.movieId
                    )
                })
            ,
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 127
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            exact: true,
            path: "/genres/:name",
            render: ({ match  })=>{
                if (!movies) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_genreView.GenreView, {
                    movie: movies.find((m)=>m.genre.name === match.params.name
                    )
                }));
            },
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 131
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            exact: true,
            path: "/directors/:name",
            render: ({ match  })=>{
                if (!movies) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_directorView.DirectorView, {
                    movie: movies.find((m)=>m.director.name === match.params.name
                    )
                }));
            },
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 137
            },
            __self: this
        }))));
    }
}
let mapStateToProps = (state)=>{
    return {
        movies: state.movies,
        user: state.user
    };
};
exports.default = _reactRedux.connect(mapStateToProps, {
    setMovies: _actions.setMovies,
    setUser: _actions.setUser
})(MainView);

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}