var helpers = require("../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// Importing frameworks and libraries
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _axios = require("axios"); // using axios to fetch data from API 
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _mainViewScss = require("./main-view.scss");
// Importing components 
var _loginView = require("../login-view/login-view");
var _movieCard = require("../movie-card/movie-card");
var _movieView = require("../movie-view/movie-view");
var _registrationView = require("../registration-view/registration-view");
var _directorView = require("../director-view/director-view");
var _genreView = require("../genre-view/genre-view");
var _profileView = require("../profile-view/profile-view");
// Import Frameworks and Libraries
var _nav = require("react-bootstrap/Nav");
var _navDefault = parcelHelpers.interopDefault(_nav);
var _navbar = require("react-bootstrap/Navbar");
var _navbarDefault = parcelHelpers.interopDefault(_navbar);
var _button = require("react-bootstrap/Button");
var _buttonDefault = parcelHelpers.interopDefault(_button);
var _row = require("react-bootstrap/Row");
var _rowDefault = parcelHelpers.interopDefault(_row);
var _col = require("react-bootstrap/Col");
var _colDefault = parcelHelpers.interopDefault(_col);
// Import reacte Router to enable navigation between different pages 
var _reactRouterDom = require("react-router-dom");
class MainView extends _reactDefault.default.Component {
    // Components stats 
    // Using the constructor method to create and initialize objects
    constructor(){
        super(); // initializes your component's state 
        this.state = {
            movies: [],
            user: null,
            register: null
        };
    }
    // makes a get request to heroku
    getMovies(token) {
        _axiosDefault.default.get('https://myflixdb21.herokuapp.com/movies', {
            headers: {
                Authorization: `Bearer ${token}`
            }
        }).then((response)=>{
            // Assign the result to the state
            this.setState({
                movies: response.data
            });
        }).catch(function(error) {
            console.log(error);
        });
    }
    // 3.6 This method ensures that the user remains on the page visited after the browser has been refreshed. 
    // Every time a user loads the page and the componentDidMount method is called, you check if the user is 
    // logged in (by retrieving this information from localStorage)
    componentDidMount() {
        let accessToken = localStorage.getItem('token');
        if (accessToken !== null) {
            this.setState({
                user: localStorage.getItem('user')
            });
            this.getMovies(accessToken);
        }
    }
    // This code is triggered of the method onLoggedin(Data) from the LoginView 
    onLoggedIn(authData) {
        console.log(authData);
        // The user’s username (authData.user.Username) is saved in the user state.
        this.setState({
            user: authData.user.Username
        });
        // The auth information received from the handleSubmit method—the token and the user—is saved in localStorage. 
        //localStorage has a setItem method that accepts two arguments
        localStorage.setItem('token', authData.token);
        localStorage.setItem('user', authData.user.Username);
        localStorage.setItem('favoriteMovies', authData.user.FavoriteMovies);
        // this.getMovies(authData) is called and gets the movies from your API once the user is logged in. 
        //Note the use of the this keyword, which is a special keyword in JavaScript. this refers to the object itself, in this case, the MainView class.
        this.getMovies(authData.token);
    }
    logOut() {
        localStorage.removeItem('token');
        localStorage.removeItem('user');
        this.setState({
            user: null
        });
        alert('You have logged out');
        window.open('/login', '_self');
    }
    onRegister(register) {
        this.setState({
            register
        });
    }
    render() {
        // destructure 
        const { movies , user , movieData , register  } = this.state;
        if (window.location.pathname === '/') {
            if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                onLoggedIn: (user1)=>this.onLoggedIn(user1)
                ,
                __source: {
                    fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                    lineNumber: 112
                },
                __self: this
            }));
        }
        return(/*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.BrowserRouter, {
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 117
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_navbarDefault.default, {
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 118
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_navbarDefault.default.Brand, {
            className: "NavbarMaintitle",
            href: "/",
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 119
            },
            __self: this
        }, " ", /*#__PURE__*/ _reactDefault.default.createElement("h1", {
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 119
            },
            __self: this
        }, "Myflix")), /*#__PURE__*/ _reactDefault.default.createElement(_navbarDefault.default.Toggle, {
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 120
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_navbarDefault.default.Collapse, {
            className: "justify-content-end",
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 121
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_navDefault.default, {
            className: "justify-content-end",
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 122
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_navDefault.default.Link, {
            href: `/users/${user}`,
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 123
            },
            __self: this
        }, "My Account")), /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
            onClick: ()=>this.logOut()
            ,
            variant: "secondary",
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 125
            },
            __self: this
        }, "Log Out"))), /*#__PURE__*/ _reactDefault.default.createElement(_rowDefault.default, {
            className: "main-view justify-content-md-center",
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 128
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            exact: true,
            path: "/",
            render: ()=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, null, /*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                }), ";"));
                if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return movies.map((m)=>/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                        md: 3,
                        key: m._id
                    }, /*#__PURE__*/ _reactDefault.default.createElement(_movieCard.MovieCard, {
                        movie: m
                    }))
                );
            },
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 129
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/",
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 141
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/register",
            render: ()=>{
                if (user) return(/*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Redirect, {
                    to: "/"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, null, /*#__PURE__*/ _reactDefault.default.createElement(_registrationView.RegistrationView, null)));
            },
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 142
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/movies/:movieId",
            render: ({ match , history  })=>{
                return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 8
                }, /*#__PURE__*/ _reactDefault.default.createElement(_movieView.MovieView, {
                    movie: movies.find((m)=>m._id === match.params.movieId
                    ),
                    onBackClick: ()=>history.goBack()
                })));
            },
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 148
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/directors/:name",
            render: ({ match , history  })=>{
                if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 8
                }, /*#__PURE__*/ _reactDefault.default.createElement(_directorView.DirectorView, {
                    director: movies.find((m)=>m.Director.Name === match.params.name
                    ).Director,
                    movies: movies
                })));
            },
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 153
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/genres/:name",
            render: ({ match , history  })=>{
                if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 8
                }, /*#__PURE__*/ _reactDefault.default.createElement(_genreView.GenreView, {
                    genre: movies.find((m)=>m.Genre.Name === match.params.name
                    ).Genre,
                    movies: movies
                })));
            },
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 159
            },
            __self: this
        })), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            exact: true,
            path: "/users/:username",
            render: ()=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (data)=>this.onLoggedIn(data)
                }));
                if (movies.length === 0) return;
                return(/*#__PURE__*/ _reactDefault.default.createElement(_profileView.ProfileView, {
                    movies: movies
                }));
            },
            __source: {
                fileName: "C:\\Users\\Beppe\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 166
            },
            __self: this
        })));
    }
}
exports.default = MainView;

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}